groups:
- name: build-images
  jobs:
  - build-http-resource
- name: tripwire
  jobs:
  - tripwire
- name: clamav
  jobs:
  - clamav
- name: awslogs
  jobs:
  - inotify-tools
  - autoconf
- name: secureproxy
  jobs:
  - openresty
- name: pdns
  jobs:
  - pdns
  - boost
  - sqlite-autoconf
- name: elastalert
  jobs:
  - elastalert
- name: oauth2-proxy
  jobs:
  - oauth2-proxy
- name: terraform
  jobs:
  - terraform
  - terraform-provider-aws
  - terraform-provider-terraform
  - terraform-provider-template

resource_types:
- name: pypi
  type: docker-image
  source:
    repository: cfplatformeng/concourse-pypi-resource

- name: hashicorp-release
  type: docker-image
  source:
    repository: starkandwayne/hashicorp-release-resource

- name: http
  type: docker-image
  source:
    repository: 18fgsa/http-resource

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

resources:
- name: deps-config
  type: git
  source:
    uri: ((deps-config-git-uri))
    branch: ((deps-config-git-branch))

- name: http-resource-src
  type: git
  source:
    uri: ((http-resource-git-uri))
    branch: ((http-resource-git-branch))

- name: http-resource-image
  type: docker-image
  source:
    email: ((docker-email))
    username: ((docker-username))
    password: ((docker-password))
    repository: 18fgsa/http-resource
    tag: latest

- name: tripwire
  type: github-release
  source:
    user: tripwire
    repository: tripwire-open-source
    access_token: ((github-access-token))
    check_every: 30m

- name: clamav
  type: http
  source:
    index: https://www.clamav.net/downloads/
    uri: https://www.clamav.net/downloads/production/clamav-{version}.tar.gz
    file_name: clamav-{version}.tar.gz
    regex: 'clamav-(0\.\d+\.\d+)\.tar\.gz'

- name: inotify-tools
  type: git
  source:
    uri: https://github.com/rvoicilas/inotify-tools
    branch: master
    tag_filter: "3.*"
    check_every: 30m

- name: autoconf
  type: http
  source:
    index: https://ftp.gnu.org/gnu/autoconf/
    uri: https://ftp.gnu.org/gnu/autoconf/autoconf-{version}.tar.gz
    file_name: autoconf-{version}.tar.gz
    regex: 'autoconf-(\d+\.\d+)\.tar\.gz'

- name: openresty
  type: github-release
  source:
    user: openresty
    repository: openresty
    access_token: ((github-access-token))
    check_every: 30m

- name: pdns
  type: http
  source:
    index: https://downloads.powerdns.com/releases/
    uri: https://downloads.powerdns.com/releases/pdns-{version}.tar.bz2
    file_name: pdns-{version}.tar.bz2
    regex: 'pdns-(4\.\d+\.\d+)\.tar\.bz2'

- name: boost
  type: git
  source:
    uri: https://github.com/boostorg/boost
    branch: master
    tag_filter: "boost-1.*"
    check_every: 30m

- name: sqlite-autoconf
  type: http
  source:
    index: https://www.sqlite.org/download.html
    uri: https://www.sqlite.org/{version}.tar.gz
    file_name: '{version}.tar.gz'
    regex: '(\d{4}\/sqlite-autoconf-\d+)\.tar\.gz'

- name: elastalert
  type: pypi
  source:
    name: elastalert

- name: oauth2-proxy
  type: git
  source:
    uri: https://github.com/bitly/oauth2_proxy
    branch: master

- name: terraform
  type: hashicorp-release
  source:
    project: terraform

- name: terraform-provider-aws
  type: hashicorp-release
  source:
    project: terraform-provider-aws

- name: terraform-provider-terraform
  type: hashicorp-release
  source:
    project: terraform-provider-terraform

- name: terraform-provider-template
  type: hashicorp-release
  source:
    project: terraform-provider-template

- name: notify
  type: slack-notification
  source:
    url: ((slack-webhook-url))

jobs:
- name: build-http-resource
  plan:
  - get: http-resource-src
    trigger: true
  - put: http-resource-image
    params:
      build: http-resource-src

- name: tripwire
  plan:
  - aggregate:
    - get: deps-config
    - get: tripwire
      trigger: true
      params:
        globs:
        - tripwire-open-source-*.tar.gz
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: tripwire
    params:
      OWNER: 18F
      REPO: cg-tripwire-boshrelease
      DEPENDENCY: tripwire
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New tripwire dependency issue for tripwire filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: clamav
  plan:
  - aggregate:
    - get: deps-config
    - get: clamav
      trigger: true
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: clamav
    params:
      OWNER: 18F
      REPO: cg-clamav-boshrelease
      DEPENDENCY: clamav
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New clamav dependency issue for clamav filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: inotify-tools
  plan:
  - aggregate:
    - get: deps-config
    - get: inotify-tools
      trigger: true
  - task: grab-tag
    file: deps-config/ci/grab-tag.yml
    input_mapping:
      repo: inotify-tools
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: tag
    params:
      OWNER: 18F
      REPO: cg-awslogs-boshrelease
      DEPENDENCY: inotify-tools
      VERSION_FILE: version/tag
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New awslogs dependency issue for inotify-tools filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: autoconf
  plan:
  - aggregate:
    - get: deps-config
    - get: autoconf
      trigger: true
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: autoconf
    params:
      OWNER: 18F
      REPO: cg-awslogs-boshrelease
      DEPENDENCY: autoconf
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New awslogs dependency issue for autoconf filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: pdns
  plan:
  - aggregate:
    - get: deps-config
    - get: pdns
      trigger: true
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: pdns
    params:
      OWNER: 18F
      REPO: pdns-release
      DEPENDENCY: pdns
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New pdns dependency issue for pdns filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: boost
  plan:
  - aggregate:
    - get: deps-config
    - get: boost
      trigger: true
  - task: grab-tag
    file: deps-config/ci/grab-tag.yml
    input_mapping:
      repo: boost
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: tag
    params:
      OWNER: 18F
      REPO: pdns-release
      DEPENDENCY: pdns
      VERSION_FILE: version/tag
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New pdns dependency issue for boost filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: sqlite-autoconf
  plan:
  - aggregate:
    - get: deps-config
    - get: sqlite-autoconf
      trigger: true
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: sqlite-autoconf
    params:
      OWNER: 18F
      REPO: pdns-release
      DEPENDENCY: pdns
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New pdns dependency issue for sqlite-autoconf filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: openresty
  plan:
  - aggregate:
    - get: deps-config
    - get: openresty
      trigger: true
      params:
        globs:
        - openresty-*.tar.gz
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: openresty
    params:
      OWNER: 18F
      REPO: cg-secureproxy-boshrelease
      DEPENDENCY: openresty
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New secureproxy dependency issue for openresty filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: elastalert
  plan:
  - aggregate:
    - get: deps-config
    - get: elastalert
      trigger: true
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: elastalert
    params:
      OWNER: 18F
      REPO: cg-secureproxy-boshrelease
      DEPENDENCY: openresty
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New elastalert dependency issue for elastalert filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: oauth2-proxy
  plan:
  - aggregate:
    - get: deps-config
    - get: oauth2-proxy
      trigger: true
  - task: grab-tag
    file: deps-config/ci/grab-tag.yml
    input_mapping:
      repo: oauth2-proxy
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: tag
    params:
      OWNER: 18F
      REPO: oauth2-proxy-boshrelease
      DEPENDENCY: oauth2-proxy
      VERSION_FILE: version/tag
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New oauth2-proxy dependency issue for oauth2-proxy filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: terraform
  plan:
  - aggregate:
    - get: deps-config
    - get: terraform
      trigger: true
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: terraform
    params:
      OWNER: 18F
      REPO: cg-provision
      DEPENDENCY: terraform
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New terraform dependency issue filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: terraform-provider-aws
  plan:
  - aggregate:
    - get: deps-config
    - get: terraform-provider-aws
      trigger: true
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: terraform-provider-aws
    params:
      OWNER: 18F
      REPO: cg-provision
      DEPENDENCY: terraform-provider-aws
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New terraform-provider-aws dependency issue filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: terraform-provider-terraform
  plan:
  - aggregate:
    - get: deps-config
    - get: terraform-provider-terraform
      trigger: true
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: terraform-provider-terraform
    params:
      OWNER: 18F
      REPO: cg-provision
      DEPENDENCY: terraform-provider-terraform
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New terraform-provider-terraform dependency issue filed at $TEXT_FILE_CONTENT"
      text_file: issue/url

- name: terraform-provider-template
  plan:
  - aggregate:
    - get: deps-config
    - get: terraform-provider-template
      trigger: true
  - task: create-issue
    file: deps-config/ci/create-issue.yml
    input_mapping:
      version: terraform-provider-template
    params:
      OWNER: 18F
      REPO: cg-provision
      DEPENDENCY: terraform-provider-template
      VERSION_FILE: version/version
      USERNAME: ((github-username))
      ACCESS_TOKEN: ((github-access-token))
      TAG_USER: ((github-team))
  - put: notify
    params:
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      text: "$BUILD_PIPELINE_NAME: New terraform-provider-template dependency issue filed at $TEXT_FILE_CONTENT"
      text_file: issue/url
